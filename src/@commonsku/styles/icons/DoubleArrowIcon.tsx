import React, { useMemo } from 'react';
import { teal } from '../colors';
import SVG, { SVGIconProps } from './SvgIcon';

export const iconSizes = {
  tiny: {
    width: 12,
    height: 12,
    viewBox: "0 0 32 32",
  },
  small: {
    width: 22,
    height: 22,
    viewBox: "0 0 32 32",
  },
  medium: {
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
  },
  large: {
    width: 62,
    height: 62,
    viewBox: "0 0 32 32",
  },
  huge: {
    width: 82,
    height: 82,
    viewBox: "0 0 32 32",
  },
  default: {
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
  },
};

type ArrowIconDirection = 'left' | 'right' | 'down' | 'up';
type DoubleArrowIconProps = SVGIconProps & {
  direction?: ArrowIconDirection;
};
export default function DoubleArrowIcon({
  color = teal.main,
  direction = "right",
  size = "medium",
  altText,
  ...props
}: DoubleArrowIconProps) {
  const iconAltText = useMemo(() => {
    if (altText) { return altText; }
    switch (direction) {
      case 'right': return 'Next';
      case 'left': return 'Previous';
      default: return '';
    };
  }, [altText, direction]);

  const directionPaths = React.useMemo(() => {
    if (direction === "left") {
      return [
        'M24.3801 23.0592C24.9001 22.5392 24.9001 21.6992 24.3801 21.1792L19.2201 15.9926L24.3935 10.8192C24.9135 10.2992 24.9135 9.45922 24.3935 8.93922C23.8735 8.41922 23.0335 8.41922 22.5135 8.93922L16.3935 15.0592C15.8735 15.5792 15.8735 16.4192 16.3935 16.9392L22.5001 23.0592C23.0201 23.5792 23.8601 23.5792 24.3801 23.0592Z',
        'M15.5935 23.0592C16.1135 22.5392 16.1135 21.6992 15.5935 21.1792L10.4335 15.9926L15.6068 10.8192C16.1268 10.2992 16.1268 9.45922 15.6068 8.93922C15.0868 8.41922 14.2468 8.41922 13.7268 8.93922L7.6068 15.0592C7.0868 15.5792 7.0868 16.4192 7.6068 16.9392L13.7135 23.0592C14.2335 23.5792 15.0735 23.5792 15.5935 23.0592Z',
      ];
    } else if (direction === 'down') {
      return [
        'M23.0588 7.62013C22.5388 7.10013 21.6988 7.10013 21.1788 7.62013L16.0055 12.7801L10.8188 7.6068C10.2988 7.0868 9.45883 7.0868 8.93883 7.6068C8.41883 8.1268 8.41883 8.9668 8.93883 9.4868L15.0588 15.6068C15.5788 16.1268 16.4188 16.1268 16.9388 15.6068L23.0588 9.4868C23.5788 8.98013 23.5788 8.14013 23.0588 7.62013Z',
        'M23.0588 16.4068C22.5388 15.8868 21.6988 15.8868 21.1788 16.4068L16.0055 21.5668L10.8322 16.3935C10.3122 15.8735 9.47216 15.8735 8.95216 16.3935C8.43216 16.9135 8.43216 17.7535 8.95216 18.2735L15.0722 24.3935C15.5922 24.9135 16.4322 24.9135 16.9522 24.3935L23.0722 18.2735C23.5788 17.7668 23.5788 16.9268 23.0588 16.4068Z',
      ];
    } else if (direction === 'up') {
      return [
        'M8.94 24.3801C9.46 24.9001 10.3 24.9001 10.82 24.3801L16.0067 19.2201L21.18 24.3935C21.7 24.9135 22.54 24.9135 23.06 24.3935C23.58 23.8735 23.58 23.0335 23.06 22.5135L16.94 16.3935C16.42 15.8735 15.58 15.8735 15.06 16.3935L8.94 22.5001C8.42 23.0201 8.42 23.8601 8.94 24.3801Z',
        'M8.94 15.5935C9.46 16.1135 10.3 16.1135 10.82 15.5935L16.0067 10.4335L21.18 15.6068C21.7 16.1268 22.54 16.1268 23.06 15.6068C23.58 15.0868 23.58 14.2468 23.06 13.7268L16.94 7.6068C16.42 7.0868 15.58 7.0868 15.06 7.6068L8.94 13.7135C8.42 14.2335 8.42 15.0735 8.94 15.5935Z',
      ];
    }
    return [
      'M7.61987 8.94078C7.09987 9.46078 7.09987 10.3008 7.61987 10.8208L12.7799 16.0074L7.60654 21.1808C7.08654 21.7008 7.08654 22.5408 7.60654 23.0608C8.12653 23.5808 8.96654 23.5808 9.48654 23.0608L15.6065 16.9408C16.1265 16.4208 16.1265 15.5808 15.6065 15.0608L9.49987 8.94078C8.97987 8.42078 8.13987 8.42078 7.61987 8.94078Z',
      'M16.4065 8.94078C15.8865 9.46078 15.8865 10.3008 16.4065 10.8208L21.5665 16.0074L16.3932 21.1808C15.8732 21.7008 15.8732 22.5408 16.3932 23.0608C16.9132 23.5808 17.7532 23.5808 18.2732 23.0608L24.3932 16.9408C24.9132 16.4208 24.9132 15.5808 24.3932 15.0608L18.2865 8.94078C17.7665 8.42078 16.9265 8.42078 16.4065 8.94078Z',
    ];
  }, [direction]);

  return (
    <SVG fill="none" xmlns="http://www.w3.org/2000/svg" iconSizes={iconSizes} size={size} {...props}>
      <title id="DoubleArrowIcon">{iconAltText}</title>
      <path d={directionPaths[0]} fill={color} />
      <path d={directionPaths[1]} fill={color} />
    </SVG>
  );
}
